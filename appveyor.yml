version: 1.4.{build}
pull_requests:
  do_not_increment_build_number: true
skip_non_tags: true
shallow_clone: true 
image: Visual Studio 2013

environment:
  DCMTK_VER: DCMTK-3.6.3
  GSTREAMER_VER: 1.12.4
  MEDIAINFO_VER: 0.7.93
  BOOST_DIR: C:\Libraries\boost_1_59_0
  GSTREAMER_DIR: c:\gstreamer\1.0\x86
  MINGW_DIR: C:\Qt\Qt5.0.2\Tools\MinGW
  QT_DIR: C:\Qt\Qt5.0.2\5.0.2\mingw47_32
  DCMTK_URI: https://github.com/DCMTK/dcmtk.git
  GSTREAMER_URI: https://gstreamer.freedesktop.org/data/pkg/windows
  MEDIAINFO_URI: https://mediaarea.net/download/source/libmediainfo
  QTGSTREAMER_URI: git://anongit.freedesktop.org/gstreamer/qt-gstreamer
  QT_URI: https://download.qt.io/archive/qt/5.0/5.0.2/qt-windows-opensource-5.0.2-mingw47_32-x86-offline.exe
  QT_RUNTIME: qt-5.0.2_mingw-4.7.wxi
  PKG_CONFIG_PATH: C:\usr\lib\pkgconfig;%GSTREAMER_DIR%\lib\pkgconfig;%QT_DIR%\lib\pkgconfig

configuration:
  - Release

# Fix line endings on Windows
init:
- git config --global core.autocrlf true

install:
- mkdir c:\usr
- mkdir c:\usr\bin && mkdir c:\usr\include && mkdir c:\usr\lib
- set PATH=%GSTREAMER_DIR%\bin;%MINGW_DIR%\bin;%QT_DIR%\bin;c:\usr\bin;c:\msys64\mingw32\bin;%PATH%

# Qt
- curl -kL %QT_URI% -o qt-installer.exe && start /wait qt-installer.exe --no-force-installations --script .ci\unattended-qt-install.qs

# GStreamer
- curl -kLO %GSTREAMER_URI%/%GSTREAMER_VER%/gstreamer-1.0-x86-%GSTREAMER_VER%.msi && msiexec /quiet /i gstreamer-1.0-x86-%GSTREAMER_VER%.msi
- curl -kLO %GSTREAMER_URI%/%GSTREAMER_VER%/gstreamer-1.0-devel-x86-%GSTREAMER_VER%.msi && msiexec /quiet /i gstreamer-1.0-devel-x86-%GSTREAMER_VER%.msi
- del *.msi

# Mediainfo
- curl -kL %MEDIAINFO_URI%/%MEDIAINFO_VER%/libmediainfo_%MEDIAINFO_VER%_AllInclusive.7z -o mediainfo.7z && 7z x mediainfo.7z && del mediainfo.7z
- cd libmediainfo*
- cd MediaInfoLib\Project\CMake
- sed -i -e 48d -e 82,87d CMakeLists.txt
- mkdir build && cd build
- set PATH=%PATH:C:\Program Files\Git\usr\bin=%
- cmake -Wno-dev .. -DCMAKE_INSTALL_PREFIX=c:\usr -G "MinGW Makefiles"
- cmake --build . --target install -- -j 4
- set PATH=%PATH%;C:\Program Files\Git\usr\bin
- cd ..\..\..\..\..

# QtGStreamer
- git clone -q %QTGSTREAMER_URI% && cd qt-gstreamer
- mkdir build && cd build
- set PATH=%PATH:C:\Program Files\Git\usr\bin=%
- cmake -Wno-dev .. -DCMAKE_INSTALL_PREFIX=c:\usr -DQT_VERSION=5  -DBoost_INCLUDE_DIR=%BOOST_DIR% -G "MinGW Makefiles"
- cmake --build . --target install -- -j 4
- set PATH=%PATH%;C:\Program Files\Git\usr\bin
- cd ..\..

# DCMTK
- git clone -q %DCMTK_URI% -b %DCMTK_VER% && cd dcmtk
- mkdir build && cd build
- set PATH=%PATH:C:\Program Files\Git\usr\bin=%
- cmake -Wno-dev .. -DCMAKE_INSTALL_PREFIX=c:\usr -DDCMTK_WITH_OPENSSL=OFF -DDCMTK_WITH_ICU=OFF -DDCMTK_WITH_ICONV=OFF -G "MinGW Makefiles"
- cmake --build . --target install -- -j 4
- set PATH=%PATH%;C:\Program Files\Git\usr\bin
- cd ..\..

build_script:
- lrelease *.ts
- qmake INCLUDEPATH+=%BOOST_DIR% CONFIG+=%CONFIGURATION%
- mingw32-make -f Makefile.%CONFIGURATION%
- copy \usr\bin\*.dll %CONFIGURATION%\
- copy %QT_DIR%\bin\*.dll %CONFIGURATION%\
- xcopy /s %QT_DIR%\plugins %CONFIGURATION%\
- msbuild "/property:configuration=%CONFIGURATION%" "wix\msi.wixproj"

artifacts:
- path: dist\%CONFIGURATION%x86\en-US\*.msi
  name: windows-installer_en-US
- path: dist\%CONFIGURATION%x86\ru-RU\*.msi
  name: windows-installer_ru-RU
